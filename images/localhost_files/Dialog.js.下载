
(function(graph){

	'use strict';

	graph.app.factory('Dialog', ['$uibModal',function($uibModal){

		var dialog = {};

        // 确认对话框
        /**
         * 打开确认对话框
         * @param   {object}   opt 对话框参数
         * @param   {string}   opt.title 对话框标题
         * @param   {string}   opt.content 对话框内容
         * @param   {string}   opt.size 对话框尺寸
         */
        dialog.confirm = function (opt) {
            var dlg = $uibModal.open({
                templateUrl: 'app/modal/dialog/dialog-confirm.html',
                size: opt.size,
                controller: ['$scope', '$uibModalInstance', function($scope, $uibModalInstance) {
                    $scope.opt = angular.extend({}, opt);
                    // 确定按钮
                    $scope.ok = function () {
                        $uibModalInstance.close({ok: true});
                    };
                    // 取消按钮
                    $scope.cancel = function () {
                        $uibModalInstance.close({ok: false});
                    };

                    $scope.btnOK = true;
                    $scope.btnCancel = true;
                }]
            });

            return dlg.result;
        };

        dialog.confirm1 = function (opt) {
            console.log('111111')
        };


        /**
         * 打开确认对话框
         * @param   {object}   opt 对话框参数
         * @param   {string}   opt.title 对话框标题
         * @param   {string}   opt.size 对话框尺寸
         */
        dialog.input = function (opt,it) {
            var dlg = $uibModal.open({
                templateUrl: 'app/modal/dialog/dialog-input.html',
                size: opt.size,
                resolve: {//这是一个入参,这个很重要,它可以把主控制器中的参数传到模态框控制器中
                    items: function () {//items是一个回调函数
                        return it;//这个值会被模态框的控制器获取到
                    }
                },
                controller: ['$scope', '$uibModalInstance','items', function($scope, $uibModalInstance,items) {
                    //初始化重命名
                    $scope.oninput = function () {
                       if(items){
                            if (items.diagram.name) {
                               $scope.inputValue = items.diagram.name;
                           }else {
                               $scope.inputValue = '';
                           }
                       }else {
                           $scope.inputValue = '';
                       }
                    }
                    $scope.oninput();
                    $scope.opt = angular.extend({}, opt);
                    // 确定按钮
                    $scope.ok = function () {
                       //console.log("value"+$scope.inputValue)
                        $uibModalInstance.close({ ok:true,value: $scope.inputValue});
                    };
                    // 取消按钮
                    $scope.cancel = function () {
                        $uibModalInstance.close({ok:false,value: false});
                    };
                }]
            });

            return dlg.result;
        };

        /**
         * 信息提示对话框
         * @param   {object}  opt - 对话框参数
         * @param   {string}  opt.title - 对话框标题
         * @param   {string}  opt.content - 对话框内容
         * @param   {string}  opt.size - 对话框尺寸
         * @returns {Promise}
         */
        dialog.prompt = function (opt) {
            var option = angular.extend({btnOK: true, btnCancel: false}, opt);

            var dlg = $uibModal.open({
                templateUrl: 'app/modal/dialog/dialog-confirm.html',
                size: opt.size,
                controller: ['$scope', '$uibModalInstance', function($scope, $uibModalInstance) {
                    $scope.opt = option;
                    // 确定按钮
                    $scope.ok = function () {
                        $uibModalInstance.close({ok: true});
                    };
                    // 取消按钮
                    $scope.cancel = function () {
                        $uibModalInstance.close({ok: false});
                    };
                    $scope.btnOK = $scope.opt.btnOK;
                    $scope.btnCancel = $scope.opt.btnCancel;
                }]
            });

            return dlg.result;
        }
        dialog.relmodel= function (opt,it) {
            var dlg = $uibModal.open({
                templateUrl: 'app/state/tarsier/diagrams/template/pubmodel.html',
                size: opt.size,
                resolve: {//这是一个入参,这个很重要,它可以把主控制器中的参数传到模态框控制器中
                    items: function () {//items是一个回调函数
                        return it;//这个值会被模态框的控制器获取到
              }
          },
                controller: ['$scope', '$uibModalInstance','mineService','items',function($scope, $uibModalInstance,mineService,items) {
                    $scope.opt = angular.extend({}, opt);
                 //回显数据方法
                $scope.echo = function (items) {
                        if (items) {
                            var  dataname= items;
                            if (dataname.groups) {
                                // console.log(dataname.groups);
                                $scope.gktemp2 = [];
                                for (var i = 0; i < dataname.groups.length; i++) {
                                 if(dataname.groups[i].groupImage){
                                         $scope.gktemp2.push({
                                        groupName: dataname.groups[i].groupName
                                        , groupImage: dataname.groups[i].groupImage,
                                       id:dataname.groups[i].id
                                    });
                                  }else{
                                         $scope.gktemp2.push({
                                        groupName: dataname.groups[i].groupName
                                        , groupImage: "assets/images/tarsier/public/monkey.png",
                                       id:dataname.groups[i].id
                                    })
                                    }
                                }
                                $scope.inTagBoxContentArr1 = $scope.gktemp2;
//
                                console.log($scope.inTagBoxContentArr1)
                            }
                            else {
                                $scope.inTagBoxContentArr1 = [];
                            }
                            $scope.open = dataname.diagram.isOpen;
                        }
                        else {
                            $scope.inTagBoxContentArr1 = [];
                        }
                }
                $scope.echo(items);
                //筛选方法   $scope.gtgroup    $scope.inTagBoxContentArr1
                /*$scope.filgtgroup();//筛选方法；*/
                $scope.filgtgroup = function(){
                    $scope.gtgroup2 = [];
                    var judg = [];
                    angular.forEach($scope.inTagBoxContentArr1,function(data){
                        judg.push(data.groupName)
                    });
                    $scope.gtgroup2 = $scope.gtgroup.filter(function(member){
                        if(judg.indexOf(member.groupName) === -1){
                            return member;
                        }
                    })
                };
                //搜索小组信息
                $scope.gtgroup = [];//初始化 小组成员为 空数组；
                $scope.getgroups = function (m) {
                        mineService.getTags({
                            groupName: "%" + m + "%"
                        }).success(function (data) {
                            $scope.gtgroup = data.data;
                            $scope.filgtgroup();//筛选方法
                        }).error(function () {});
                    }
                      // 搜索框
                $scope.nrgroup = false;
                $scope.searchContent1 = null; //搜索栏输入内容
                $scope.groupId = []; //存储标签ID
                $scope.gtgroup = []; //数据获取
                $scope.stMerSehCot = '';//成员搜索内容；
                $scope.startSearch = false// 显示成员下拉列表
                $scope.warnN = false;//小组成员不存在 ng-show;

                $scope.delTagBox1 = function (it) { //删除标签框
                    // 抓取删除标签的内容，在inTagBoxContentArr的索引。
                    $scope.inTagBoxContentArr1 = $scope.inTagBoxContentArr1.filter(function(member){
                        if(member.groupName !== it.groupName){
                            return member;
                        }
                    })
                    $scope.filgtgroup();//筛选方法
                }
                $scope.xiaozuID=function(arr){
                    var  ids=[];
                    for(var i=0;i<arr.length;i++){
                        ids.push(arr[i].id);
                    }
                    return  ids;
                }
                 //搜索FN
                $scope.tagBoxKeyUpFn1 = function () {
                    if ($scope.searchContent1) {
                        $scope.getgroups($scope.searchContent1);
                    }
                    else {
                        $scope.getgroups('');
                    }
                };
                    // 确定按钮
                    $scope.ok = function () {
          $uibModalInstance.close({ok:$scope.xiaozuID($scope.inTagBoxContentArr1)});
                    };
                    // 取消按钮
                    $scope.cancel = function () {
                        $uibModalInstance.close({ok: false});
                    };
                    $scope.btnOK = true;
                    $scope.btnCancel = true;

                    //鼠标悬浮
                    $scope.mouserover = function(){
                        $(event.target).css('background-color','#f0f2f4')
                    }
                    //鼠标离开
                    $scope.mouseleave = function(){
                        $(event.target).css('background-color','#fff')
                        .css('color','#74797c')
                    }
                    //鼠标点击 -- 成员
                    $scope.mousedown = function(){
                        $(event.target).css('background-color','#d0e6f1')
                        .css('color','#000')
                    }
                    //鼠标点击 -- 外框
                    $scope._outAll = function(){
                        if(!$scope.nrgroup){
                            $scope.nrgroup = true;
                            angular.element('.m-wrapper').css('border','1px solid #FF9429')
                            .css('box-shadow','0 0 10px 0px #e5f3fa');
                            setTimeout(function(){
                               angular.element('.m-ipt')[0].focus();
                            },300)
                        }
                    };
                    //取消外框 --focus状态
                    $scope._outAllNo = function(){
                        $scope.nrgroup = false;
                        angular.element('.m-wrapper').css('border','1px solid #ddd');
                    }
                    /*鼠标点击抓取成员名称*/
                    $scope.tagBoxClickFn1 = function (e) { //鼠标点击 键入 标签内容
                        var obj = {
                            groupName: e.groupName
                            , groupImage: e.groupImage, id: e.id
                        };
                        var repeat = false;
                        for (var i = 0; i < $scope.inTagBoxContentArr1.length; i++) {
                            if ($scope.inTagBoxContentArr1[i].groupName == e.groupName) {
                                repeat = true;
                                return;
                            }
                        }
                        if (!repeat) {
                            $scope.inTagBoxContentArr1.push(obj);
                            $scope.filgtgroup();//筛选方法
                        }
                             $scope.nrgroup = false;
                        $scope.searchContent1 = null;
                        $scope.getgroups('');
                    };
                //监听$scope.filteredTeam有无内容
                $scope.$watch('gtgroup2','searchContent1',function(){
                    var judg = angular.element('.m-ipt').val();
                    if( !$scope.gtgroup.length && judg !==''){
                        $scope.warnN = true;
                    }else if(!$scope.searchContent1){
                         $scope.getgroups('');
                    }
                    else{
                        $scope.warnN = false;
//                         $scope.getgroups('');
                    }
                },true)


                }]
            });

            return dlg.result;
        };
        //发布公开
        dialog.reltag= function (opt,ity) {
              // console.log(ity)
            var dlg = $uibModal.open({
                templateUrl: 'app/state/tarsier/diagrams/template/pubtag.html',
                size: opt.size,
                 resolve: {//这是一个入参,这个很重要,它可以把主控制器中的参数传到模态框控制器中
                    items: function () {//items是一个回调函数
                        return ity;//这个值会被模态框的控制器获取到
              }
          },
                controller: ['$scope', '$uibModalInstance', 'mineService','items',function($scope, $uibModalInstance,mineService,items) {
                    $scope.opt = angular.extend({}, opt);
                    $scope.echo = function (item) {

                        if (item) {
                            var  dataname= item;
                            if (dataname.tags) {
                               $scope.gktemp=[];
                                for (var i = 0; i < dataname.tags.length; i++) {
                                    $scope.gktemp.push(dataname.tags[i].tagName)
                                }
                                $scope.inTagBoxContentArr = $scope.gktemp;
                            }
                            else {
                                $scope.inTagBoxContentArr = [];
                            }
                        }else{
                            $scope.inTagBoxContentArr = [];
                        }
                    }
                    $scope.echo(items);
                //搜索标签信息
                $scope.getTagNameslist = function (m) {
                        mineService.getTagNameslist({
                            tagName: "%" + m + "%"
                        }).success(function (data) {
                            $scope.gttag = data.data;
                            $scope.huoqutags();
                        }).error(function () {});
                    }
                    //获取标签名和id
                $scope.huoqutags = function () {
                        $scope.tagn = []; //存储标签名
                        if ($scope.gttag.length!=0) {
                            $scope.nrtag = true;
                            for (var i = 0; i < $scope.gttag.length; i++) {
                                $scope.tagn.push($scope.gttag[i].tagName);
                            }
                        }
                        else {
                            $scope.tagn = [];
                            $scope.nrtag = false;
                        }
                    }
                    //标签名数组封装
                $scope.redlt = function (array) {
                     var cpgroup = [];
                        for (var i = 0; i < array.length; i++) {
                            cpgroup.push({
                                tagName: array[i]
                            });
                        }
                        return cpgroup;
                    }
                 //标签
                $scope.searchContent = null; //搜索栏输入内容
                $scope.tagId = []; //存储标签ID
                $scope.nrtag = false;
                $scope.tagBoxBlock = false; //标签显示与隐藏
                $scope.continueDel = false; //判断是否继续删除；
                $scope.delTagBox = function ($event) { //删除标签框
                  // 抓取删除标签的内容，在inTagBoxContentArr的索引。
                 $scope.inTagBoxContentArr.splice($.inArray($event.target.previousElementSibling.innerHTML, $scope.inTagBoxContentArr), 1);
                  //console.log($scope.inTagBoxContentArr)
                };
                $scope.tagBoxKeyUpFn = function (e) { //回车键 键入 标签 内容
                    var keycode = window.event ? e.keyCode : e.which; //获取按键编码
                    if ($scope.searchContent) {
                        if (keycode == 13) {
                            var yOn = $.inArray($scope.searchContent, $scope.inTagBoxContentArr)
                            if (yOn == -1) {
                                $scope.inTagBoxContentArr.push($scope.searchContent);
                            }
                            $scope.searchContent = null;
                            $scope.nrtag = false;
                        }
                        $scope.getTagNameslist($scope.searchContent);
                    }else {
                        $scope.nrtag = false;
                    };
                }
                $scope.tagBoxClickFn = function ($event) { //鼠标点击 键入 标签内容
                    $scope.tagBoxBlock = true;
                    if ($.inArray($event.target.innerHTML, $scope.inTagBoxContentArr) == -1) {
                        $scope.inTagBoxContentArr.push($event.target.innerHTML);
                    }
                    console.log($scope.inTagBoxContentArr);
                    $scope.searchContent = null;
                    $scope.nrtag = false;
                };
                    // 确定按钮
                    $scope.ok = function () {
                        $uibModalInstance.close({ok:$scope.redlt($scope.inTagBoxContentArr)});
                    };
                    // 取消按钮
                    $scope.cancel = function () {
                        $uibModalInstance.close({ok: false});
                    };

                    $scope.btnOK = true;
                    $scope.btnCancel = true;
                    //触发FOCUS方法
                    $scope.setFocus = function(){
                        angular.element('.u-select-add-member-input')[0].focus();
                    }
                }]
            });

            return dlg.result;
        };


		//取消发布
        dialog.fbexit = function (opt,ity) {
            var dlg = $uibModal.open({
                templateUrl: 'app/state/tarsier/diagrams/template/pubeixt.html',
                size: opt.size,
                resolve: {//这是一个入参,这个很重要,它可以把主控制器中的参数传到模态框控制器中
                    items: function () {//items是一个回调函数
                        return ity;//这个值会被模态框的控制器获取到
              }
          },

            });
            return dlg.result;
        };

        return dialog;
	}]);

})(nameSpace.reg('graph'));
