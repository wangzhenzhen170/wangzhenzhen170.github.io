(function (graph) {

    'use strict';
    //右侧浮动层
    graph.app.directive('createNoticeRule', function () {
        return {
            restrict: 'AE',
            replace: true,
            scope: {
                ruleType: '@ruleType',
                //arryLineLongFun:'=arryLineLongFun',
                //dutyPersonShow:'=dutyPersonShow'
            },
            templateUrl: 'app/directive/creatRule/noticeCreat.html',
            controller: ['$scope', '$timeout', '$state', 'Unit', 'uDialog', 'DefinedEventsService', 'MonitoringService', '$uibModal', function ($scope, $timeout, $state, Unit, uDialog, DefinedEventsService, MonitoringService, $uibModal) {
                $scope.L = L;
                MonitoringService.getModelCode({ 'function': true, ruleType: 0 }).success(function (result) {
                    if (result.success) {
                        $scope.classList = result.data;
                    } else {
                        Unit.error($scope.L.get('EMV_VARIABLES_LIST_FAILED_TO_GET'));
                    }
                }).error(function () {
                    Unit.error($scope.L.get('EMV_VARIABLES_LIST_FAILED_TO_GET'));
                });
                //获取左侧长度
                $scope.arryLineLongFun = function () {

                }

                $scope.dutyFun = function () {
                    $scope.$broadcast('pActive', true)
                }
                //$scope.dutyPersonShow();
                $scope.objs = {};

                $scope.checkModeMaliFun = function () {
                    $scope.modemail = (!$scope.modemail);
                    if ($scope.modemail && !$scope.modeMessage && !$scope.modeWeichat) {
                      Unit.error(L.get('EMV_MUST_CHOOSE_A_NOTIFICATION_METHOD'))
                        $scope.modemail = (!$scope.modemail);
                    }
                    $scope.$emit('notifies', $scope.getnotifies());
                    $scope.arryLineLongFun();
                }
                $scope.checkModeMessFun = function () {
                    $scope.modeMessage = (!$scope.modeMessage);
                    if ($scope.modemail && !$scope.modeMessage && !$scope.modeWeichat) {
                      Unit.error(L.get('EMV_MUST_CHOOSE_A_NOTIFICATION_METHOD'))
                        $scope.modeMessage = (!$scope.modeMessage);
                    }
                    $scope.$emit('notifies', $scope.getnotifies());
                    $scope.arryLineLongFun();
                }
                $scope.checkModeWeiFun = function () {
                    $scope.modeWeichat = (!$scope.modeWeichat);
                    if ($scope.modemail && !$scope.modeMessage && !$scope.modeWeichat) {
                      Unit.error(L.get('EMV_MUST_CHOOSE_A_NOTIFICATION_METHOD'))
                        $scope.modeWeichat = (!$scope.modeWeichat);
                    }
                    $scope.$emit('notifies', $scope.getnotifies());
                    $scope.arryLineLongFun();
                }
                //$scope.personSendArray=[];
                $scope.personCheckedArray = [];//显示在页面上的邮件用户名
                $scope.teamCheckedArray = [];
                $scope.dutyPersonArray = [];
                var UserTeams = {};
                $scope.$broadcast('UserTeams', UserTeams);
                $scope.$on('UserTeams1', function (event, data) {
                    $scope.personCheckedArray = data.Users;
                    $scope.dutyPersonArray = data.dutyperson;
                    $scope.teamCheckedArray = data.Teams;
                    $scope.$emit('noticePersonCheckedArray', $scope.personCheckedArray);
                    $scope.$emit('noticeTeamCheckedArray', $scope.teamCheckedArray);
                    $scope.$emit('noticedutyPersonArray', $scope.dutyPersonArray);
                })
                $scope.$watch('objs.charge', function () {
                    $scope.$emit('charge', $scope.objs.charge);
                })
                $scope.$emit('charge', false);
                $scope.checkopCode = [];//给后台传的邮件用户名
                //$scope.personCheckedArray=[];//显示在页面上的邮件用户名
                $scope.mailContentString = '';
                $scope.messageContentString = '';
                $scope.objs.mailTitle = '';
                $scope.getFirstLiFun = function (index) {
                    if (index === 0) {
                        $($('.set-noticelone  .mailContentli')[0]).addClass('active');
                    }

                }
                $scope.mailContentFun = function (e, flag) {
                    var keycode = window.event ? e.keyCode : e.which; //获取按键编码

                    if ((window.event.shiftKey) && (keycode === 52 || keycode === 229)) {
                        e.preventDefault();
                        if (flag === 'mail') {
                            $scope.mailContentFlag = true;
                        }
                        if (flag === 'message') {
                            $scope.messageContentFlag = true;
                        }

                        //微信
                        if (flag === 'Wei') {
                            $scope.WeiContentFlag = true;
                        }
                        if (flag === 'title') {
                            $scope.titleFlag = true;
                        }

                    } else {
                        if (keycode !== 13 && keycode !== 38 && keycode !== 40) {

                            if (flag === 'mail') {
                                $scope.mailContentFlag = false;
                                $timeout(function () {
                                    $scope.mailtextareaVal = $('.set-noticelone .mail-notice .mailContent').val()
                                    $scope.mailContentString = $scope.mailtextareaVal;
                                })
                            }
                            if (flag === 'message') {
                                $scope.messageContentFlag = false;
                                $timeout(function () {
                                    $scope.mailtextareaVal = $('.set-noticelone .message-notice .mailContent').val()
                                    $scope.messageContentString = $scope.mailtextareaVal;
                                })
                            }
                            if (flag === 'Wei') {
                                $scope.WeiContentFlag = false;
                                $timeout(function () {
                                    $scope.mailtextareaVal = $('.set-noticelone .Wei-notice .mailContent').val()
                                    $scope.objs.WeiContentString = $scope.mailtextareaVal;
                                })
                            }
                            if (flag === 'title') {
                                $scope.titleFlag = false;
                                $timeout(function () {
                                    $scope.mailtextareaVal = $('.set-noticelone .mail-title .mailContent').val()
                                    $scope.objs.mailTitle = $scope.mailtextareaVal;
                                })
                            }


                        }
                    }

                    if (keycode === 38) {
                        e.preventDefault();
                        hintListCtrl($('.mail-notice .mailContentlist'), 'UP');
                        hintListCtrl($('.message-notice .mailContentlist'), 'UP');
                        hintListCtrl($('.mail-title .mailContentlist'), 'UP');
                        hintListCtrl($('.Wei-notice .mailContentlist'), 'UP');
                    } else if (keycode === 40) {
                        e.preventDefault();

                        hintListCtrl($('.mail-notice .mailContentlist'), 'DOWN');
                        hintListCtrl($('.message-notice .mailContentlist'), 'DOWN');
                        hintListCtrl($('.mail-title .mailContentlist'), 'DOWN');
                        hintListCtrl($('.Wei-notice .mailContentlist'), 'DOWN');
                    }
                    if (keycode === 13) {
                        e.preventDefault();

                        if (flag === 'mail') {
                            $scope.mailContentString += '${' + $('.mail-notice .mailContentlist .active span').text() + '}';
                            $('.mail-notice .mailContent').val($scope.mailContentString)
                            $('.mail-notice .mailContentli').removeClass('active')
                            $scope.mailContentFlag = false;
                        }
                        if (flag === 'message') {
                            $scope.messageContentString += '${' + $('.message-notice .mailContentlist .active span').text() + '}';
                            $('.message-notice .mailContent').val($scope.messageContentString)
                            $('.message-notice .mailContentli').removeClass('active')
                            $scope.messageContentFlag = false;
                        }
                        if (flag === 'Wei') {
                            $scope.objs.WeiContentString += '${' + $('.Wei-notice .mailContentlist .active span').text() + '}';
                            $('.Wei-notice .mailContent').val($scope.objs.WeiContentString)
                            $('.Wei-notice .mailContentli').removeClass('active')
                            $scope.WeiContentFlag = false;
                        }
                        if (flag === 'title') {
                            $scope.objs.mailTitle += '${' + $('.mail-title .mailContentlist .active span').text() + '}';
                            $('.mail-title .mailContent').val($scope.objs.mailTitle)
                            $('.mail-title .mailContentli').removeClass('active')
                            $scope.titleFlag = false;
                        }
                    }

                    $scope.checkedInforFun = function (li, flag) {

                        if (flag === 'mail') {
                            $scope.mailContentString += li.display;
                            $('.set-noticelone .mail-notice .mailContent').val($scope.mailContentString)
                            $('.set-noticelone .mail-notice .mailContentli').removeClass('active')
                            $scope.mailContentFlag = false;
                        }
                        if (flag === 'message') {
                            $scope.messageContentString += li.display;
                            $('.set-noticelone .message-notice .mailContent').val($scope.messageContentString)
                            $('.set-noticelone .message-notice .mailContentli').removeClass('active')

                            $scope.messageContentFlag = false;
                        }
                        if (flag === 'Wei') {
                            $scope.objs.WeiContentString += li.display;
                            $('.set-noticelone .Wei-notice .mailContent').val($scope.objs.WeiContentString)
                            $('.set-noticelone .Wei-notice .mailContentli').removeClass('active')

                            $scope.WeiContentFlag = false;
                        }
                        if (flag === 'title') {
                            $scope.objs.mailTitle += li.display;
                            $('.set-noticelone .mail-title .mailContent').val($scope.objs.mailTitle)
                            $('.set-noticelone .mail-title .mailContentli').removeClass('active')

                            $scope.titleFlag = false;
                        }
                    }
                }


                $scope.getnotifies = function () {
                    var notifies = [];
                    if (!$scope.modemail) {
                        var mail = { 'type': 1, 'content': $scope.mailContentString, 'title': $scope.objs.mailTitle };
                        notifies.push(mail);
                    }
                    if ($scope.modeMessage) {
                        var message = { 'type': 2, 'content': $scope.messageContentString };
                        notifies.push(message);
                    }

                    if ($scope.modeWeichat) {
                        var wei = { 'type': 4, 'content': $scope.objs.WeiContentString };
                        notifies.push(wei);
                    }
                    return notifies
                }
                $scope.getnotifies();
                $scope.$emit('notifies', $scope.getnotifies());
                $scope.$emit('noticePersonCheckedArray', $scope.personCheckedArray)
                $scope.$emit('noticeTeamCheckedArray', $scope.teamCheckedArray)
                $scope.$emit('noticedutyPersonArray', $scope.dutyPersonArray)

                $scope.$watch('mailContentString', function () {
                    $scope.$emit('notifies', $scope.getnotifies())
                })
                $scope.$watch('objs.mailTitle', function () {
                    $scope.$emit('notifies', $scope.getnotifies())
                })
                $scope.$watch('messageContentString', function () {
                    $scope.$emit('notifies', $scope.getnotifies())
                })
                $scope.$watch('objs.WeiContentString', function () {
                    $scope.$emit('notifies', $scope.getnotifies())
                })

                function hintListCtrl(hint_wrap, direction) {
                    var hint_List = hint_wrap.find('.mailContentli'),
                        hint_Active = hint_wrap.find('.mailContentli.active');
                    var wrapHeight = hint_wrap.height();
                    if (hint_List.hasClass('active')) {
                        var length = hint_List.length;
                        var index = hint_Active.index();
                        if (direction === 'UP') {
                            index === 0 ? index = length - 1 : index--;
                        } else if (direction === 'DOWN') {
                            index === length - 1 ? index = 0 : index++;
                        }
                        hint_List.removeClass('active');
                        var select_hint = hint_List.eq(index);
                        select_hint.addClass('active');
                        var posTop = select_hint.position().top;
                        var childrenHeight = hint_Active.height();
                        var srcollTop = hint_wrap.scrollTop();
                        posTop >= wrapHeight ? hint_wrap.scrollTop(srcollTop + posTop - wrapHeight + childrenHeight) : '';
                        posTop <= 0 ? hint_wrap.scrollTop(srcollTop + posTop) : '';
                    } else {
                        if (direction === 'UP') {
                            hint_List.last().addClass('active');
                        } else if (direction === 'DOWN') {
                            hint_List.first().addClass('active');
                        }
                    }
                }

            }]
        };
    });

})(nameSpace.reg('graph'));
