(function (graph) {

	'use strict';

	graph.app.controller('inspectionManagementCtrl', ['$scope', '$state', '$timeout', 'MonitoringService', '$uibModal', 'Unit', 'uDialog', '$stateParams', '$compile', '$interval', 'Dialog', function ($scope, $state, $timeout, MonitoringService, $uibModal, Unit, uDialog, $stateParams, $compile, $interval, Dialog) {
		$scope.reportContentShowFlag = false;
		$scope.reports = [];
		$scope.ondutyDuration = '';

		// start
		//总页数
		$scope.pages = 20;
		$scope.pageNum = 1;
		$scope.pageSize = 15;

		$scope.getPages = function () {
			MonitoringService.queryPages({ pageSize: $scope.pageSize }).success(function (result) {
				if (result.success) {
					$scope.pages = result.data;
					$scope.pagesArr = new Array($scope.pages);
					$scope.totalRows = result.data * $scope.pageSize;
				}
			}).error(function (error) {
				console.log(error);
			});
		};
		$scope.getPages();
		$scope.totalRows = $scope.pages * $scope.pageSize;
		$scope.pageSizeOption = [15, 30, 45];
		// end

		$scope.checkedReportIds = [];

		//删除报告Flag
		$scope.deleteFlag = false;
		$scope.deleteCheckBoxs = new Array($scope.totalRows);
		//选中报告id
		$scope.deleteList = [];

		//报表查阅状态
		$scope.inquireFlag = [];
		//筛选报表时间范围
		$scope.timeArea = 3600000 * 12;
		$scope.report = {};
		$scope.report.inspectionPerson = '';
		$scope.reportId = -1;
		$scope.roomName = '';
		$scope.roomCodes = [];
		$scope.roomNames = [];
		$scope.showCheckTableFlag = false;
		$scope.activeEvents = [];
		$scope.closedEvents = [];
		$scope.concerns = [];
		$scope.otherConcerns = [];
		$scope.concernsToday = [];
		$scope.otherConcernsToday = [];
		$scope.L = L;
		$scope.reportStartDate = 0;
		$scope.rooms = [];
		$scope.roomDefault = [];
		$scope.roomSel = [];
		$scope.selectRoomListFlag = [];
		$scope.selectRoomLiNum = -1;
		$scope.concernTime = '';
		$scope.concernTimeInputFlag = false;
		$scope.concernTime = '';
		$scope.concernDescInputFlag = false;
		$scope.concernDesc = '';
		$scope.checkRsFlag = false;
		$scope.concernUploadFile = '';
		$scope.newReportConcerns = [];
		$scope.newReportConcern = {};
		$scope.newReportActiveEvents = [];
		$scope.newReportClosedEvents = [];
		$scope.showOtherEventsFlag = false;
		$scope.otherActiveEvents = [];
		$scope.otherClosedEvents = [];
		$scope.eventsPageSize = 20;
		$scope.eventsPageNum = 1;
		//默认展示页码个数
		$scope.pagesShowCount = 5;
		$scope.selectedPageFlag = new Array($scope.pagesShowCount);
		$scope.notSelectedPageFlag = new Array($scope.pagesShowCount);
		$scope.pageNumClass = new Array($scope.pages);
		for (var i = 0; i < $scope.selectedPageFlag.length; i++) {
			$scope.selectedPageFlag[i] = false;
			$scope.notSelectedPageFlag[i] = true;
		}
		//提交按钮是否可用
		$scope.submitBtn = false;
		$scope.addConcernFlag = true;

		/**表格多房间报表内容生成部分 start */

		//报表添加房间控制变量
		$scope.partSize = Number(1);
		// $scope.roomNames = [];
		// $scope.allActiveEvents = [];
		// $scope.allClosedEvents = [];
		// $scope.allConcerns = [];
		// $scope.allNewReportConcerns = [];
		$scope.partSizeArr = [''];
		//查询房间名称
		$scope.getRoomNames = function () {
			MonitoringService.queryRoomNames().success(function (result) {
				if (result.data) {
					$scope.roomNames = result.data;
					//遍历次数
					$scope.partSizeArr = new Array($scope.roomNames.length);
					$scope.newReportConcerns = new Array($scope.roomNames.length);
					$scope.newReportActiveEvents = new Array($scope.roomNames.length);
					$scope.newReportActiveEvents = new Array($scope.roomNames.length);
					$scope.concerns = new Array($scope.roomNames.length);
					$scope.roomCodes = new Array($scope.roomNames.length);
				}
			}).error(function (error) {
				console.log(error);
			});
		};

		/**表格多房间报表内容生成部分 end */

		$scope.changeDeleteFlag = function () {
			$scope.deleteFlag = true;
		};

		$scope.cancelDelete = function () {
			$scope.deleteFlag = false;
			$scope.deleteList = [];
			$scope.checkedReportIds = [];
			$scope.queryByTimeFun();
		};

		//告警查询
		$scope.queryEvents = function () {
			MonitoringService.queryInspEvents({ serials: $scope.report.eventSerial }).success(function (result) {
				// console.log($scope.report.eventSerial)
				if (result.success) {
					if (result.data) {
						var events = result.data;
						// console.log(events);
						//var roomCodes = $scope.roomCodes.split('、');
						var roomCodes = new Array($scope.roomCodes.length);
						//console.log(roomCodes);
						var notOtherFlag = false;
						var acevents = [];
						var acoevents = [];
						for (var k = 0; k < events.length; k++) {
							if ('roomid' in events[k]) {
								for (var i = 0; i < $scope.roomCodes.length; i++) {
									roomCodes[i] = $scope.roomCodes[i].split('、');
									for (var j = 0; j < roomCodes[i].length; j++) {
										if (events[k].roomid === roomCodes[i][j]) {
											notOtherFlag = true;
											acevents[i].push(events[k]);
										}
									}
								}
							}
							if (!notOtherFlag) {
								acoevents.push(events[k]);
							}
						}
						$scope.activeEvents = acevents;
						$scope.otherActiveEvents = acoevents;
						$scope.changeOtherEventsFlag();

					}
				}
			}).error(function (error) {
				console.log(error);
			});
			MonitoringService.queryInspEvents({ serials: $scope.report.eventClosedSerial }).success(function (result) {
				if (result.success) {
					if (result.data) {
						var events = result.data;
						// console.log(events);
						//var roomCodes = $scope.roomCodes.split('、');
						var roomCodes = new Array($scope.roomCodes.length);
						// console.log(roomCodes);
						var notOtherFlag = false;
						var clevents = [];
						var cloevents = [];
						for (var k = 0; k < events.length; k++) {
							if ('roomid' in events[k]) {
								for (var i = 0; i < $scope.roomCodes.length; i++) {
									roomCodes[i] = $scope.roomCodes[i].split('、');
									for (var j = 0; j < roomCodes[i].length; j++) {
										if (events[k].roomid === roomCodes[i][j]) {
											notOtherFlag = true;
											clevents[i].push(events[k]);
										}
									}
								}
							}
							if (!notOtherFlag) {
								// console.log(events.length)
								cloevents.push(events[k]);
							}
						}
						$scope.closedEvents = clevents;
						$scope.otherClosedEvents = cloevents;
						$scope.changeOtherEventsFlag();
					}

				}
			}).error(function (error) {
				console.log(error);
			});
		};
		//检查结果数据
		$scope.newReportConcernsRs = function () {
			var concerns = $scope.concernsToday;
			for (var i = 0; i < concerns.length; i++) {
				$scope.newReportConcerns.push(concerns[i]);
			}
		}

		//根据报表时间查询关注事项
		$scope.queryConcerns = function () {
			MonitoringService.queryConcernsByReportTime({ reportId: $scope.report.id }).success(function (result) {
				if (result.success) {
					if (result.data) {
						var res = result.data;
						for (var i = 0; i < res.length; i++) {
							if (res[i].concernsTime) {
								var cTime = res[i].concernsTime.toString();
								// var concernsTime = cTime.substring(0, 4) + '/' + cTime.substring(4, 6) + '/' + cTime.substring(6, 8) + ' ' + cTime.substring(8, 10) + ':' + cTime.substring(10, 12);
								var concernsTime = cTime.substring(4, 6) + '/' + cTime.substring(6, 8) + ' ' + cTime.substring(8, 10) + ':' + cTime.substring(10, 12);
								res[i].concernsTime = concernsTime;
							}
						}
						var notOtherFlag = false;
						var roomCodes = new Array($scope.roomCodes.length);
						var concernsArr = new Array($scope.roomCodes.length);
						var otherConcernsArr = [];
						for (var k = 0; k < res.length; k++) {
							if ('roomCode' in res[k]) {
								for (i = 0; i < $scope.roomCodes.length; i++) {
									roomCodes[i] = $scope.roomCodes[i].split('、');
									for (var j = 0; j < roomCodes[i].length; j++) {
										if (res[k].roomCode === roomCodes[i][j]) {
											notOtherFlag = true;
											concernsArr[i].push(res[k]);
										}
									}
								}
							}
							if (!notOtherFlag) {
								otherConcernsArr.push(res[k]);
							}
						}

						$scope.concerns = concernsArr;
						$scope.otherConcerns = otherConcernsArr;
					}
				}
			}).error(function (error) {
				console.log(error);
			});
		};

		//新增报表关注事项查询
		$scope.queryNewReportConcerns = function () {
			MonitoringService.queryConcerns({ roomName: $scope.roomName, daysCount: 10 }).success(function (result) {
				if (result.success) {
					if (result.data) {
						var res = result.data;
						for (var i = 0; i < res.length; i++) {
							if (res[i].concernsTime) {
								var cTime = res[i].concernsTime.toString();
								// var concernsTime = cTime.substring(0, 4) + '/' + cTime.substring(4, 6) + '/' + cTime.substring(6, 8) + ' ' + cTime.substring(8, 10) + ':' + cTime.substring(10, 12);
								var concernsTime = cTime.substring(4, 6) + '/' + cTime.substring(6, 8) + ' ' + cTime.substring(8, 10) + ':' + cTime.substring(10, 12);
								res[i].concernsTime = concernsTime;
							}
						}
						var notOtherFlag = false;
						var roomCodes = new Array($scope.roomCodes.length);
						var concernsArr = new Array($scope.roomCodes.length);
						var otherConcernsArr = [];
						for (var k = 0; k < res.length; k++) {
							if ('roomCode' in res[k]) {
								for (i = 0; i < $scope.roomCodes.length; i++) {
									roomCodes[i] = $scope.roomCodes[i].split('、');
									for (var j = 0; j < roomCodes[i].length; j++) {
										if (res[k].roomCode === roomCodes[i][j]) {
											notOtherFlag = true;
											concernsArr[i].push(res[k]);
										}
									}
								}
							}
							if (!notOtherFlag) {
								otherConcernsArr.push(events[k]);
							}
						}
						$scope.concerns = concernsArr;
						$scope.otherConcerns = otherConcernsArr;
						$scope.concerns = res;
					}
				}
			}).error(function (error) {
				console.log(error);
			});
		};
		//新增报表告警查询
		$scope.queryNewReportEvents = function () {
			MonitoringService.queryActiveEventsByRoomName({ roomName: $scope.roomName }).success(function (result) {
				if (result.success) {
					if (result.data) {
						$scope.activeEvents = result.data;
						$scope.newReportEventsSerial(1, result.data);
					}
				}
			}).error(function (error) {
				console.log(error);
			});
			MonitoringService.queryClosedEventsByRoomName({ roomName: $scope.roomName }).success(function (result) {
				if (result.success) {
					if (result.data) {
						$scope.closedEvents = result.data;
						$scope.newReportEventsSerial(2, result.data);
					}

				}
			}).error(function (error) {
				console.log(error);
			});
		};

		//查询其他房间告警
		$scope.queryOtherEvents = function () {
			MonitoringService.queryOtherActiveEvents({ pageNum: $scope.eventsPageNum, pageSize: $scope.eventsPageSize }).success(function (result) {
				if (result.success) {
					if (result.data) {
						$scope.otherActiveEvents = result.data;
						$scope.newReportEventsSerial(1, result.data);
					}
				}
			}).error(function (error) {
				console.log(error);
			});
			MonitoringService.queryOtherClosedEvents({ pageNum: $scope.eventsPageNum, pageSize: $scope.eventsPageSize }).success(function (result) {
				if (result.success) {
					if (result.data) {
						$scope.otherClosedEvents = result.data;
						$scope.newReportEventsSerial(2, result.data);
					}

				}
			}).error(function (error) {
				console.log(error);
			});
		};
		//判断是否显示其他告警
		$scope.changeOtherEventsFlag = function () {
			if ($scope.otherActiveEvents.length > 0 || $scope.otherClosedEvents.length > 0) {
				$scope.showOtherEventsFlag = true;
			} else {
				$scope.showOtherEventsFlag = false;
			}
		};

		$scope.newReportEventsSerial = function (stage, events) {
			if (stage === 1) {
				var acevents = [];
				for (var i = 0; i < events.length; i++) {
					acevents.push(events[i].serial);
				}
				$scope.newReportActiveEvents = acevents.join(',');
			}
			if (stage === 2) {
				var clevents = [];
				for (var j = 0; j < events.length; j++) {
					clevents.push(events[j].serial);
				}
				$scope.newReportClosedEvents = clevents.join(',');
			}
			// console.log($scope.newReportClosedEvents)

		};


		$scope.selectRoom = function (selectRoom) {
			selectRoom.showFlag = !selectRoom.showFlag;
		};

		$scope.inputConcernTime = function (data) {
			data.concernTimeInputFlag = true;
		};

		$scope.inputConcernDesc = function (data) {
			data.concernDescInputFlag = true;
		};

		$scope.selectRoomLi = function (data, item) {
			data.showFlag = false;
			data.defaultSelect = item;
			data.roomCode = item;
		};


		$scope.clickPageNum = function (pageNum) {
			$scope.pageNum = pageNum;
			$scope.selectedPageFlag[pageNum - 1] = true;
			$scope.notSelectedPageFlag[pageNum - 1] = false;
		};

		$scope.pagesCountArr = new Array($scope.pagesShowCount);
		// $scope.getPages();

		//添加关注事项行
		$scope.addConcern = function (room, roomCode) {
			if (room.newConcerns.length) {
				$scope.addItemFlag = true;
				room.newConcerns.forEach(function (item) {
					if (!item.concernsTime || !item.concernsDesc) {
						Unit.error('请检查上一条数据是否填写完整');
						$scope.addItemFlag = false;
						return;
					}

					if (!$scope.validateConcernsTime(item.concernsTime)) {
						Unit.error('请检查时间格式是否正确');
						$scope.addItemFlag = false;
						return;
					}



				});
				$scope.addItemFlag && room.newConcerns.push({ roomCode: roomCode, concernsTime: '01/01 00:00' });
			} else {
				room.newConcerns.push({ roomCode: roomCode, concernsTime: '01/01 00:00' });
			}




		};

		$scope.deleteRow = function (data, index) {
			data.splice(index, 1);
			//$scope.roomDefault.splice(index, 1);
			//$scope.roomSel.splice(index, 1);
			//$scope.selectRoomListFlag.splice(index, 1);
		};

		$scope.uploadFile = function (file, index, newconcern) {
			var formData = new FormData();
			formData.append('file', file);
			MonitoringService.uploadFile(formData).success(function (result) {
				if (result.data) {
					newconcern.concernsUrl = result.data;
				}
			}).error(function (error) {
				console.log(error);
			});

		};

		var oDate = new Date();
		var intStartTime = oDate.getFullYear() + "/" + ((oDate.getMonth() + 1) > 9 ? (oDate.getMonth() + 1) : '0' + (oDate.getMonth() + 1) < 10? '0'+(oDate.getMonth()+1): (oDate.getMonth() + 1)) + "/" + (oDate.getDate()<10?'0'+(oDate.getDate()):(oDate.getDate()));
		$scope.startD = intStartTime; //获取系统的年；
		var intEndTime = oDate.getFullYear() + "/" + ((oDate.getMonth() + 1) > 9 ? (oDate.getMonth() + 1) : '0' + (oDate.getMonth() + 1) < 10? '0'+(oDate.getMonth()+1): (oDate.getMonth() + 1)) + "/" + (oDate.getDate()<10?'0'+(oDate.getDate()):(oDate.getDate()));
		$scope.endD = intEndTime;   //获取系统的年；
		$scope.startTimeHour = '00:00:00';
		$scope.endTimeHour = '00:00:00';
		$scope.$on('startTimeHour', function (event, msg) {
			$scope.startTimeHour = msg;
		});
		$scope.$on('endTimeHour', function (event, msg) {
			$scope.endTimeHour = msg;
		});
		$scope.goToTimeSearch = function () {
			if (!$("#startTime").val() || !$scope.startTimeHour) {
				Unit.error('请选择起始时间');
				return;
			}
			if (!$("#endTime").val() || !$scope.endTimeHour) {
				Unit.error('请选择结束时间');
				return;
			}
			var startTime = ($("#startTime").val() + " " + $scope.startTimeHour);
			var endTime = $("#endTime").val() + ' ' + $scope.endTimeHour;
			$scope.startTime = Number((new Date(startTime)).getTime());
			$scope.endTime = Number((new Date(endTime)).getTime());
			if ($scope.startTime > $scope.endTime) {
				Unit.error('结束时间必须大于起始时间');
				return;
			}
			$scope.startD = $("#startTime").val();
			$scope.endD = $("#endTime").val();
			$scope.startTimeHour = $scope.startTimeHour;
			$scope.endTimeHour = $scope.endTimeHour;
			$scope.startTime = $scope.startTime;
			$scope.endTime = $scope.endTime;

			//$scope.selectTimeDefaul="自定义时间";
			var startGetD = $scope.startD.split('/');
			var endGetD = $scope.endD.split('/');
			// $scope.selectTimeDefaul = startGetD[1] + "/" + startGetD[2] + "-" + endGetD[1] + '/' + endGetD[2];
			$scope.selectTimeListFlag = false;
			$scope.selectDefTimeFlag = false;
			$scope.reportStartDate = startGetD.join('') + '000000';
			$scope.reportEndDate = endGetD.join('') + '999999';
			var starthour = $scope.startTimeHour.split(':');
			var endhour = $scope.endTimeHour.split(':');
			for(var i = 1;i < 3;i++) {
				if(startGetD[i].length<2){
					startGetD[i] = 0 + startGetD[i];
				}
				if(endGetD[i].length<2){
					endGetD[i] = 0 + endGetD[i];
				}
				if(starthour[i].length<2){
					starthour[i] = 0 + starthour[i];
				}
				if(endhour[i].length<2){
					endhour[i] = 0 + endhour[i];
				}
			}
			$scope.startD = startGetD[0]+'/'+startGetD[1]+'/'+startGetD[2];
			$scope.selectTimeDefaul = startGetD[1] + "/" + startGetD[2] + "-" + endGetD[1] + '/' + endGetD[2];
			$scope.reportStartDate = startGetD.join('') + starthour.join('');
			$scope.reportEndDate = endGetD.join('') + endhour.join('');
			$scope.queryByTimeFun();
		};

		$scope.showCheckTable = function (room, roomCode) {
			if(!room.newConcerns.length || room.newConcerns.length < 1) {
				room.newConcerns.push({ roomCode: roomCode, concernsTime: '01/01 00:00' });
			}
			room.showCheckTableFlag = !room.showCheckTableFlag;
		};

		//查询全部巡检报表
		$scope.queryInspReports = function () {
			$scope.endDate = 0;
			$scope.startDate = 0;
            $scope.reportStartDate = 0;
            MonitoringService.queryInspReportsByDateRange({ pageNum: $scope.pageNum, pageSize: $scope.pageSize }).success(function (result) {
				if (result.success) {
					var res = result.data.data;
					$scope.inquireFlag = new Array(res.length);
					for (var i = 0; i < res.length; i++) {
						if (res[i].reportTime) {
							var cTime = res[i].reportTime.toString();
							var reportTime = cTime.substring(0, 4) + '/' + cTime.substring(4, 6) + '/' + cTime.substring(6, 8) + ' ' + cTime.substring(8, 10) + ':' + cTime.substring(10, 12);
							res[i].reportTime = reportTime;
						}
						// res[i].inquirer += ' 查阅';
						if (res[i].inquirer && res[i].inquireTime && res[i].inquirer !== '' && res[i].inquirer !== undefined) {
							var iTime = res[i].inquireTime.toString();
							// var inquireTime = iTime.substring(0,4)+'/'+iTime.substring(4,6)+'/'+iTime.substring(6,8)+' '+iTime.substring(8,10)+':'+iTime.substring(10,12);
							var inquireTime = '(' + iTime.substring(0, 4) + '/' + iTime.substring(4, 6) + '/' + iTime.substring(6, 8) + ' ' + iTime.substring(8, 10) + ':' + iTime.substring(10, 12) + ')';
							res[i].inquireTime = inquireTime;
							$scope.inquireFlag[i] = true;
						} else {
							$scope.inquireFlag[i] = false;
						}
						//将选中状态放在报告对象中
						res.forEach(function(report, index){
							res[index].checked = false;
							$scope.checkedReportIds.forEach(function(id){
								if(report.id === id){
									res[index].checked = true;
								}
							});
						});
					}
					$scope.reports = res;
					$scope.totalRows = result.data.totalRows;
					// $scope.pageNum = 1;
				}
			}).error(function (error) {
				console.log(error);
			});
			// $scope.deleteList = [];
		};
		$scope.queryInspReports();

		$scope.getAutoDuration = function () {
			MonitoringService.queryInspDuration({reportId: $scope.report.id}).success(function(result){
				if(result.success) {
					$scope.AutoDuration = result.data;
				}
			}).error(function(error){
				console.log(error);
			});
		};



		//从配置文件中获取时间
		$scope.getBackSetTime = function () {
			MonitoringService.queryOndutyTime().success(function (result) {
				if (result.success) {
					$scope.backSetTime = result.data.split(',');
				}
			}).error(function (error) {
				console.log(error);
			});
		}
		$scope.getBackSetTime();
		//获取当天时间及前一天
		$scope.getNowData = function (d) {
			var cur = new Date();
			// console.log(d);
			var preDate;
			var date = d || $scope.dayFormat(cur);
			if (d) {
				d = d.toString();
				var dateStr = d.substring(0, 4) + '-' + d.substring(4, 6) + '-' + d.substring(6, 8) + ' ' + d.substring(8, 10) + ':' + d.substring(10, 12) + ':' + d.substring(12, 14);
				var preTime = new Date(dateStr);
				preTime = preTime - 1000 * 60 * 60 * 24;
				preTime = new Date(preTime);
				var year = preTime.getFullYear();
				var mon = preTime.getMonth() + 1;
				var day = preTime.getDate();
				preDate = year + '' + (mon < 10 ? ('0' + mon) : mon) + (day < 10 ? ('0' + day) : day);
			} else {
				preDate = $scope.dayFormat(new Date(cur.getTime() - 24 * 60 * 60 * 1000));
			}

			$scope.nowData = date.toString().substring(0, 4) + '/' + date.toString().substring(4, 6) + '/' + date.toString().substring(6, 8);
			$scope.beforeDate = preDate.toString().substring(0, 4) + '/' + preDate.toString().substring(4, 6) + '/' + preDate.toString().substring(6, 8);
			if($scope.report.reportType === 2){
				$scope.getAutoDuration();
				$timeout(function(){
					if($scope.AutoDuration){
						var startD = new Date($scope.AutoDuration.startTime);
						var endD = new Date($scope.AutoDuration.endTime);
						var startTimeStr = $scope.dateStrFormat(startD);
						var endTimeStr = $scope.dateStrFormat(endD);
						$scope.ondutyDuration = startTimeStr + ' - ' + endTimeStr;
					} else {
						$scope.ondutyDuration =  ' - ';
					}
				}, 800);


			} else {
				$scope.ondutyDuration = $scope.beforeDate + ' ' + $scope.backSetTime[0] + ' - ' + $scope.nowData + ' ' + $scope.backSetTime[1];
			}


			//初始化报表信息
			var hour = $scope.hourFormat(cur);
			var titleNum = date + '_' + hour;
			if(!$scope.report.reportTitle){
				$scope.report.reportTitle = '人工巡检报告_' + titleNum;
			}
		}
		$scope.getRoomSources = function () {
			MonitoringService.queryRooms().success(function (res) {
				$scope.allRoomSourcesList = res.data;
				$scope.allRoomSourcesList['其他'] = ['其他'];
				$scope.allRoomSources = {}
				Object.keys(res.data).forEach(function (i) {
					$scope.allRoomSources[i] = '';
					res.data[i].forEach(function (d, index) {
						if (index === res.data[i].length - 1) {
							$scope.allRoomSources[i] += d;
						} else {
							$scope.allRoomSources[i] = $scope.allRoomSources[i] + d + ',';
						}

					});
				});
				// console.log($scope.allRoomSourcesList);
				// console.log($scope.allRoomSources)


			}).error(function (error) {
				console.log(error);
			});
		}
		$scope.getRoomSources();
		$scope.showReportContent = function (report, index) {
			$scope.reportContentShowFlag = false;
			$scope.report = report;
			//人工巡检
			if (Object.keys(report).length === 0) {
				$scope.getNowData();
				//人工巡检获取数据
				MonitoringService.queryNewReportInfo().success(function (res) {
					//查询房间名称
					MonitoringService.queryRoomNames().success(function (result) {
						if (result.success) {
							$scope.roomNames = result.data;
							$scope.roomNameStr = $scope.roomNames.join(',');

							$scope.handlingData(res, $scope.roomNames);
							$scope.reportContentShowFlag = true;
							$scope.checkRsFlag = false;
							document.getElementById('reportCon').scrollTo(0,0);
						}
					}).error(function (error) {
						console.log(error);
					});

				}).error(function (error) {
					console.log(error);
				});

			} else {//点击报告
				//更新查阅人
				$timeout(function () {
					MonitoringService.updateInquirer({ reportId: $scope.report.id }).success(function () {
						$scope.queryByTimeFun();
					}).error(function (error) {
						console.log(error);
					});
				}, 500);
				var date = $scope.report.createTime;
				$scope.getNowData(date);
				//点击报告
				MonitoringService.queryInspReportById({ reportId: $scope.report.id }).success(function (res) {
					if(res.success){
						$scope.handlingData(res);
						$scope.reportContentShowFlag = true;
						$scope.checkRsFlag = false;
						document.getElementById('reportCon').scrollTo(0,0);
					}
				}).error(function (error) {
					console.log(error);
				});

				$scope.report = report;
				$scope.reportId = $scope.report.id;
				$scope.roomName = $scope.report.roomCode;
			}
			document.getElementById('reportCon')&&document.getElementById('reportCon').scrollTo(0,0);

		};

		$scope.handlingData = function (res, rooms) {
			$scope.allRoomData = [];
			if (res.success) {
				var allRoom = rooms || res.data.inspectionReportInfo.roomCode.split(',') || [];
				allRoom.push('其他');
				var resData = res.data;
				$scope.activeEventAry = [];
				$scope.closedEventAry = [];
				if (rooms) {
					Object.keys(resData).forEach(function (i) {
						if (i === 'activeEvents') {
							Object.keys(resData[i]).forEach(function (d) {
								resData[i][d].forEach(function (value) {
									$scope.activeEventAry.push(value.serial);
								});

							});
						}
						if (i === 'closedEvents') {
							Object.keys(resData[i]).forEach(function (d) {
								resData[i][d].forEach(function (value) {
									$scope.closedEventAry.push(value.serial);
								});
							});
						}
					});
					$scope.activeEventStr = $scope.activeEventAry.join(',');
					$scope.closedEventStr = $scope.closedEventAry.join(',');
				}

				allRoom.forEach(function (room) {
					if(room.length > 0) {
						var obj = {};

						Object.keys(resData).forEach(function (i) {
							if(i === 'activeEvents' && $scope.activeEventAry && $scope.activeEventAry.length > 0) {
								$scope.activeEventAry.sort($scope.compare('occurtime'));
							}
							if(i === 'closedEvents' && $scope.closedEventAry && $scope.closedEventAry.length > 0) {
								$scope.closedEventAry.sort($scope.compare('occurtime'));
							}
							room === '其他' && (obj.inspectionReportInfo = { roomCode: '其他' })
							room !== '其他' && (obj.inspectionReportInfo = resData[i]);
							if (i === 'concerns' || i === 'newConcerns') {
								if(i === 'concerns' && resData[i][room] && resData[i][room].length > 0) {
									resData[i][room].sort($scope.compare('concernsTime'));
								}
								resData[i][room].forEach(function (r) {
									// r.concernsTime = r.concernsTime.toString().substring(0, 4) + '/' + r.concernsTime.toString().substring(4, 6) + '/' + r.concernsTime.toString().substring(6, 8)
									r.concernsTime = r = r.concernsTime.toString().substring(4, 6) + '/' + r.concernsTime.toString().substring(6, 8) + ' ' + r.concernsTime.toString().substring(8, 10) + ':' + r.concernsTime.toString().substring(10, 12);
								});
							}
							i !== 'inspectionReportInfo' && (obj[i] = resData[i][room]);

							//rooms && (obj.inspectionReportInfo = { roomCode: room })
							obj.inspectionReportInfo = { roomCode: room };

						});
						$scope.allRoomData.push(obj);
					}
				});


			}
			// console.log($scope.allRoomData)

		};

		$scope.compare = function( propertyName) {
			return function(object1, object2) {
			  var value1 = object1[propertyName];
			  var value2 = object2[propertyName];
			  if (value2 > value1) {
				return 1;
			  } else if (value2 < value1) {
				return -1;
			  } else {
				return 0;
			  }
			};
		  };

		//保存重点关注事项
		$scope.saveConcerns = function (concnern) {
			MonitoringService.saveConcern(concnern).success(function () {

			}).error(function (error) {
				console.log(error);
			});
		};
		//保存重点关注事项
		$scope.updateConcerns = function (concnern) {
			MonitoringService.updateConcern(concnern).success(function () {

			}).error(function (error) {
				console.log(error);
			});
		};
		//根据房间名称查询房间
		$scope.queryRoomsByName = function () {
			// console.log($scope.report.roomCode);
			var roomNames = $scope.report.roomCode.split(',');
			var size = roomNames.length;
			for (var i = 0; i < size; i++) {
				MonitoringService.queryRoomsByName({ roomName: roomNames[i] }).success(function (result) {
					if (result.success) {
						$scope.roomCodes[i] = result.data.join('、');
						$scope.rooms[i] = result.data;
						$scope.roomNames[i] = result.data;
						// var n = $scope.roomDefault.length;
						// for( var i = 0; i<n; i++) {
						// 	$scope.roomSel.push(result.data[0]);
						// }
						if ($scope.report.id === undefined) {
							$scope.queryNewReportEvents();
							$scope.queryOtherEvents();
							$scope.queryNewReportConcerns();
							$scope.queryConcernsToday();
							$timeout(function () {
								$scope.changeOtherEventsFlag();
							}, 500);
						}
					}
				}).error(function (error) {
					console.log(error);
				});
			}
		};



		$scope.queryConcernsToday = function () {
			MonitoringService.queryConcernsToday({ roomName: $scope.roomName }).success(function (result) {
				if (result.success) {
					if (result.data) {
						var res = result.data;
						for (var i = 0; i < res.length; i++) {
							if (res[i].concernsTime) {
								var cTime = res[i].concernsTime.toString();
								// var concernsTime = cTime.substring(0,4)+'/'+cTime.substring(4,6)+'/'+cTime.substring(6,8)+' '+cTime.substring(8,10)+':'+cTime.substring(10,12);
								var concernsTime = cTime.substring(4, 6) + '/' + cTime.substring(6, 8) + ' ' + cTime.substring(8, 10) + ':' + cTime.substring(10, 12);
								res[i].concernsTime = concernsTime;
							}
						}
						$scope.concernsToday = res;
						$scope.newReportConcerns = res;
						var num = $scope.concernsToday.length;
						for (var i = 0; i < num; i++) {
							$scope.selectRoomListFlag.push(false);
							$scope.roomDefault.push($scope.concernsToday[i].roomCode);
							$scope.roomSel.push($scope.concernsToday[i].roomCode);
						}


					}
				}
			}).error(function (error) {
				console.log(error);
			});
		};

		//新建人工巡检报表
		$scope.newReport = function () {
			$scope.otherActiveEvents = [];
			$scope.otherClosedEvents = [];
			$scope.checkRsFlag = true;
			$scope.report = {};
			//初始化报表信息
			var date = new Date();
			var day = $scope.dayFormat(date);
			var hour = $scope.hourFormat(date);
			date = day + '_' + hour;
			$scope.report.reportTitle = '人工巡检报告_' + date;
			$scope.rooms = [];
			$scope.roomDefault = [];
			$scope.roomSel = [];
			$scope.selectRoomListFlag = [];
			$scope.selectRoomLiNum = -1;
			$scope.roomCodes = [];

			$scope.newReportConcerns = [];
			$scope.newReportActiveEvents = [];
			$scope.newReportClosedEvents = [];
			$scope.changeOtherEventsFlag();
			$scope.showCheckTableFlag = false;
			$timeout(function () {
				$scope.checkRsFlag = true;
			}, 100);

		};
		//根据日期查询报表
		$scope.queryByTime = function () {
			if ($scope.reportDate === 0) {
				Unit.error('请选择日期！');
				$scope.queryInspReports();
			} else {
				var date = new Date($scope.reportDate);
				var time = $scope.dateFormat(date);
				if (time === 19700102000000) {
					Unit.error('请选择日期！');
					$scope.queryInspReports();
				} else {
					MonitoringService.queryInspReportsByDate({ 'pageNum': $scope.pageNum, 'pageSize': $scope.pageSize, 'date': time }).success(function (result) {
						if (result.success) {
							var res = result.data;
							for (var i = 0; i < res.length; i++) {
								if (res[i].reportTime) {
									var cTime = res[i].reportTime.toString();
									var reportTime = cTime.substring(0, 4) + '/' + cTime.substring(4, 6) + '/' + cTime.substring(6, 8) + ' ' + cTime.substring(8, 10) + ':' + cTime.substring(10, 12);
									res[i].reportTime = reportTime;
								}
								// res[i].inquirer += ' 查阅';
								if (res[i].inquirer && res[i].inquireTime && res[i].inquirer !== '' && res[i].inquirer !== undefined) {
									var iTime = res[i].inquireTime.toString();
									// var inquireTime = iTime.substring(0,4)+'/'+iTime.substring(4,6)+'/'+iTime.substring(6,8)+' '+iTime.substring(8,10)+':'+iTime.substring(10,12);
									var inquireTime = '(' + iTime.substring(0, 4) + '/' + iTime.substring(4, 6) + '/' + iTime.substring(6, 8) + ' ' + iTime.substring(8, 10) + ':' + iTime.substring(10, 12) + ')';
									res[i].inquireTime = inquireTime;
									$scope.inquireFlag[i] = true;

								} else {
									$scope.inquireFlag[i] = false;
								}
							}
							$scope.reports = res;
						}
					}).error(function (error) {
						console.log(error);
					});
				}
			}

		};
		//time格式转换
		$scope.dateFormat = function (date) {
			var year = date.getFullYear().toString();
			if (year.length < 4) {
				var i = 4 - year.length;
				for (; i > 0; i--) {
					year = '0' + year;
				}
			}
			var month = (date.getMonth() + 1).toString();
			if (month.length < 2) {
				var i = 2 - month.length;
				for (; i > 0; i--) {
					month = '0' + month;
				}
			}
			var day = date.getDate().toString();
			if (day.length < 2) {
				var j = 2 - day.length;
				for (; j > 0; j--) {
					day = '0' + day;
				}
			}
			var time = year + month + day + '000000';
			return time;
		};
		//时间格式转换(用于值班周期显示)
		$scope.dateStrFormat = function (date) {
			var year = date.getFullYear().toString();
			if (year.length < 4) {
				var i = 4 - year.length;
				for (; i > 0; i--) {
					year = '0' + year;
				}
			}
			var month = (date.getMonth() + 1).toString();
			if (month.length < 2) {
				var i = 2 - month.length;
				for (; i > 0; i--) {
					month = '0' + month;
				}
			}
			var day = date.getDate().toString();
			if (day.length < 2) {
				var i = 2 - day.length;
				for (; i > 0; i--) {
					day = '0' + day;
				}
			}
			var hour = date.getHours().toString();
			if (hour.length < 2) {
				var i = 2 - hour.length;
				for (; i > 0; i--) {
					hour = '0' + hour;
				}
			}
			var minute = date.getMinutes().toString();
			if (minute.length < 2) {
				var i = 2 - minute.length;
				for (; i > 0; i--) {
					minute = '0' + minute;
				}
			}
			var time = year + '/' + month + '/' + day + ' ' + hour + ':' + minute;
			return time;
		};
		//日期格式转换
		$scope.dayFormat = function (date) {
			// console.log(date)
			var year = date.getFullYear().toString();
			if (year.length < 4) {
				var i = 4 - year.length;
				for (; i > 0; i--) {
					year = '0' + year;
				}
			}
			var month = (date.getMonth() + 1).toString();
			if (month.length < 2) {
				var i = 2 - month.length;
				for (; i > 0; i--) {
					month = '0' + month;
				}
			}
			var day = date.getDate().toString();
			if (day.length < 2) {
				var i = 2 - day.length;
				for (; i > 0; i--) {
					day = '0' + day;
				}
			}
			var time = year + month + day;
			return time;
		};
		//时间格式转换
		$scope.hourFormat = function (date) {
			var hour = date.getHours().toString();
			if (hour.length < 2) {
				var i = 2 - hour.length;
				for (; i > 0; i--) {
					hour = '0' + hour;
				}
			}
			var minute = date.getMinutes().toString();
			if (minute.length < 2) {
				var i = 2 - minute.length;
				for (; i > 0; i--) {
					minute = '0' + minute;
				}
			}
			var time = hour + minute;
			return time;
		};

		// $scope.reportEndDate = $scope.dateFormat(oDate).substring(0, 8) + '999999';
		//根据日期范围查询报表
		$scope.queryByTimeFun = function () {
			// if ($scope.reportStartDate === 0) {
			// 	Unit.error('请选择日期！');
			// 	$scope.queryInspReports();
			// } else {
				if(!$scope.reportEndDate){
					$scope.reportEndDate=$scope.dateFormat(new Date()).substring(0, 8)+'235959';
				}
                //console.log($scope.reportEndDate)
				MonitoringService.queryInspReportsByDateRange({ 'pageNum': $scope.pageNum, 'pageSize': $scope.pageSize, 'startDate': $scope.reportStartDate, 'endDate': $scope.reportEndDate }).success(function (result) {
					if (result.success) {
						var res = result.data.data;
						// console.log(res)
						for (var i = 0; i < res.length; i++) {
							if (res[i].reportTime) {
								var cTime = res[i].reportTime.toString();
								var reportTime = cTime.substring(0, 4) + '/' + cTime.substring(4, 6) + '/' + cTime.substring(6, 8) + ' ' + cTime.substring(8, 10) + ':' + cTime.substring(10, 12);
								res[i].reportTime = reportTime;
							}
							// res[i].inquirer += ' 查阅';
							if (res[i].inquirer && res[i].inquireTime && res[i].inquirer !== '' && res[i].inquirer !== undefined) {
								var iTime = res[i].inquireTime.toString();
								// var inquireTime = iTime.substring(0,4)+'/'+iTime.substring(4,6)+'/'+iTime.substring(6,8)+' '+iTime.substring(8,10)+':'+iTime.substring(10,12);
								var inquireTime = '(' + iTime.substring(0, 4) + '/' + iTime.substring(4, 6) + '/' + iTime.substring(6, 8) + ' ' + iTime.substring(8, 10) + ':' + iTime.substring(10, 12) + ')';
								res[i].inquireTime = inquireTime;
								$scope.inquireFlag[i] = true;
							} else {
								$scope.inquireFlag[i] = false;
							}

						}
						//将选中状态放在报告对象中
						res.forEach(function(report, index){
							res[index].checked = false;
							$scope.checkedReportIds.forEach(function(id){
								if(report.id === id){
									res[index].checked = true;
								}
							});
						});
						$scope.reports = res;
						// $scope.pageNum = 1;
						$scope.totalRows = result.data.totalRows;
					}
				}).error(function (error) {
					console.log(error);
				});
			// }
			//初始化删除列表
			// $scope.deleteList = [];
		};

		//1min刷新
		$scope.refresh = function () {
			$interval(function(){
				//刷新巡检报告
				$scope.queryByTimeFun();
				//刷新自动巡检状态
				$scope.getAutoStatus();
			}, 60000);
		};
		$scope.refresh();

		$scope.selectTimeDefaul = '显示全部';
		$scope.getSetTime = 12;
		$scope.selectTimeListAry = [
			{ 'name': '最近1天', 'time': '1' },
			{ 'name': '最近3天', 'time': '3' },
			{ 'name': '最近7天', 'time': '7' },
			{ 'name': '最近一个月', 'time': '30' },
			{ 'name': '显示全部', 'time': -1 }
		];
		$scope.selectTimeListFlag = false;
		$scope.goToSelectTime = function (e) {
			e&&e.stopPropagation();
			if ($scope.selectTimeListFlag === true) {
				$scope.goBack();
			} else {
				$scope.selectTimeListFlag = true;
			}
		};

		$scope.selectTimeLi = function (item) {
			if ($scope.startTime) {
				delete $scope.startTime;
			}
			if ($scope.endTime) {
				delete $scope.endTime;
			}
			$scope.selectTimeListFlag = false;
			$scope.selectTimeDefaul = item.name;
			$scope.selectDefTimeFlag = false;
			$scope.pageNum = 1;
			$scope.startD = intStartTime;
			$scope.endD = intEndTime;

			var date = new Date();
			var startTime = date.getTime() - item.time*24*60*60*1000;
			var startT = new Date(startTime);
			var startHour = $scope.hourFormat(startT);
			var startTStr = startT.getFullYear() + '' + ((startT.getMonth() + 1) > 9 ? (startT.getMonth() + 1) : '0' + (startT.getMonth() + 1) < 10? '0'+(startT.getMonth()+1): (startT.getMonth() + 1)) + (startT.getDate()< 10?'0'+(startT.getDate()):(startT.getDate())) + startHour + (startT.getSeconds() < 10 ? '0' + startT.getSeconds() : startT.getSeconds());
			var endTStr = $scope.dateFormat(date).substring(0,8)+'235959';
			if(item.time === -1){
				$scope.reportStartDate = -1;
			} else {
				$scope.reportStartDate = startTStr;
			}
			$scope.reportEndDate = endTStr;
			$scope.deleteList = [];
			$scope.checkedReportIds = [];
			$scope.queryByTimeFun();
		};

		$scope.selectDefTimeFlag = false;
		$scope.selectDefTime = function () {
			$scope.selectDefTimeFlag = true;
		};
		$scope.goBack = function () {
			$scope.selectTimeListFlag = false;
			$scope.selectDefTimeFlag = false;
		};

		$scope.clickBlank = function (e) {
			var cname = e.target.className;
			if (cname !== 'definedT ng-binding' && cname !== 'dataInput ng-pristine ng-untouched ng-valid ng-not-empty' && cname !== 'ng-binding'
				&& cname !== 'selectBox' && cname !== 'btn ng-binding' && cname !== 'dataInput ng-valid ng-not-empty ng-touched ng-dirty ng-valid-parse' &&
				e.target.tagName !== 'IMG' && cname !== 'timeBtns'&&cname!=='' && cname !== 'clear' && cname !== 'dataInput ng-pristine ng-valid ng-not-empty ng-touched') {
				$scope.selectTimeListFlag = false;
				$scope.selectDefTimeFlag = false;
			}
			if (cname !== 'full ng-binding' && cname !== 'ng-binding ng-scope') {
				for (var i = 0; i < $scope.selectRoomListFlag.length; i++) {
					$scope.selectRoomListFlag[i] = false;
				}
				if (!$(e.target).parents('.public-select-time').length && !$(e.target).hasClass('timeInput')) {
					$('.select-time').hide();
				}

			}
		};

		$scope.saveRomeparms = {
			inspectionReportInfo: {
				'inspectionPerson': ''
			},
			newConcerns: {}
		}
		$scope.submitReport = function () {
			if ($scope.report.inspectionPerson === '' || $scope.report.inspectionPerson === undefined) {
				Unit.error('请输入巡检人姓名');
			} else {
				$scope.saveRomeparms.inspectionReportInfo = {
					reportTitle: $scope.report.reportTitle,
					reportType: 1,
					roomCode: $scope.roomNameStr,
					eventSerial: $scope.activeEventStr,
					eventClosedSerial: $scope.closedEventStr,
					'inspectionPerson': $scope.report.inspectionPerson
				}
				$scope.allRoomData.forEach(function (room) {
					$scope.addConcernFlag = true;
					var date = new Date();
					var year = date.getFullYear();
					Object.keys(room).forEach(function (i) {
						if(room.showCheckTableFlag) {
							if (i === 'newConcerns') {
								$scope.saveRomeparms.newConcerns[room.inspectionReportInfo.roomCode] = [];
								room[i].forEach(function (v) {
									if (v.concernsTime && v.concernsDesc) {

										$scope.saveRomeparms.newConcerns[room.inspectionReportInfo.roomCode].push({
											id: v.id,
											roomCode: v.roomCode,
											concernsTime: year + v.concernsTime.replace(/[^0-9]/ig, '') + '00',
											concernsDesc: v.concernsDesc,
											concernsUrl: v.concernsUrl ? v.concernsUrl : '',
											submitPerson: $scope.report.inspectionPerson

										})
									}

								});

							}
						}

					});

				});

				if ($scope.addConcernFlag) {
					MonitoringService.saveInspReportAllInfo($scope.saveRomeparms).success(function (result) {
						if (result.success) {
							var reportId = result.data;
							Unit.success(result.data);
							document.getElementById('reportCon').scrollTo(0,0);
							$scope.reportContentShowFlag = false;
							$scope.pageNum = 1;
							// $scope.queryInspReports();
							$timeout(function(){
								$scope.queryByTimeFun();
							},500);

						}
					}).error(function (error) {
						console.log(error);
					});
				} else {
					Unit.error('请按照正确格式录入日期');
				}
			}
		};

		$scope.validateConcernsTime = function (ConcernsTime, concernsTimeNum) {
			var reg  = /^(0[1-9]|1[012])\/(0[1-9]|[12]\d|3[01]) ([01]\d|2[0-3]):([0-5]\d)$/;
			// console.log(reg.test(ConcernsTime.toString()));
			if (reg.test(ConcernsTime.toString())) {
				return true;
			} else {
				return false;
			}
		};

		/*分页 开始*/
		$scope.paging = function (data) {
			$scope.pageSize = data.pageSize;
			$scope.pageNum = data.currentPage;
			if ($scope.reportStartDate === 0 && $scope.startDate === 0 && $scope.endDate === 0) {
				$scope.queryInspReports();
			} else {
				$scope.queryByTimeFun();
			}
		};
		/*分页 结束*/
		//自动巡检执行状态
		$scope.autoStatus = 0;
		$scope.autoStatusFlag = false;

		$scope.saveAutoInspReport = function () {
			var saveNewConcerns = [];
			$scope.allRoomData.forEach(function (room) {
				var date = new Date();
				var year = date.getFullYear();
				Object.keys(room).forEach(function (i) {
					if (i === 'newConcerns') {
						room[i].forEach(function (v) {
							if (v.concernsTime && v.concernsDesc) {
								saveNewConcerns.push({
									roomCode: v.roomCode,
									concernsTime: year + v.concernsTime.replace(/[^0-9]/ig, '') + '00',
									concernsDesc: v.concernsDesc,
									concernsUrl: v.concernsUrl ? v.concernsUrl : '',
									submitPerson: $scope.report.inspectionPerson,
									reportCode: $scope.report.id

								});
							}

						});
					}

				});
			});

			$scope.saveAutoData = {
				reportId: $scope.report.id,
				concerns: saveNewConcerns
			};
			$timeout(function(){
				MonitoringService.saveAutoInspReport($scope.saveAutoData).success(function(result){
					if(result.data){
						Unit.success(result.data);
						document.getElementById('reportCon').scrollTo(0,0);
						$scope.reportContentShowFlag = false;
						$scope.pageNum = 1;
						$timeout(function(){
							$scope.queryByTimeFun();
						},500);
					}
				}).error(function(error){
					console.log(error);
				});
			}, 500);


		};


		$scope.openAutoInspDialog = function() {
			var modalInstance = $uibModal.open({
				animation: true,
				backdrop: 'static',
				templateUrl: 'app/modal/autoInspection/autoInspectionTimeSetting.html',
				controller: 'autoInspectionTimeSettingCtrl',
				resolve:  {
					AutoStatus: function () {
						return $scope.autoStatusFlag;
					}
				}
			});
			modalInstance.result.then(function (result) {
				$timeout(function(){
					$scope.getAutoStatus();
				}, 500);

			 }, function (reason) {
				 console.log(reason);
			 });
		};

		$scope.getAutoStatus = function () {
			MonitoringService.getAutoStatus().success(function(result){
				if(result.data){
					$scope.autoStatus = result.data.AutoStatus;
					if(result.data.AutoStatus ===1){
						$scope.autoStatusFlag = true;
					} else {
						$scope.autoStatusFlag = false;
					}
				}
			}).error(function(error){
				console.log(error);
			});
		};
		$scope.getAutoStatus();

		$scope.deleteReports = function () {
			var deleteList = $scope.deleteList;
			MonitoringService.deleteInspReports(deleteList).success(function(result){
				if(result.success){
					Unit.success(result.data);
					$scope.queryByTimeFun();
					//删除列表状态
					$scope.deleteFlag = false;
					//右侧展开状态
					$scope.reportContentShowFlag = false;
					$scope.deleteList = [];
					$scope.checkedReportIds = [];
				}
			}).error(function(error){
				console.log(error);
			});
		}

		$scope.deleteConfirm = function(){
			if($scope.deleteList.length>0){
				var dialog = uDialog.confirm({
					title: '确认',
					content: '确认删除选中的'+$scope.deleteList.length+'张报告吗',
					confirm: function () {
						if($scope.deleteList.length>0){
							//批量删除操作
							$scope.deleteReports();
							$timeout(function(){
								$scope.queryByTimeFun();
							},500);

						}
					}
				});
			} else {
				Unit.error('请选择要删除的报告');
			}



		};

		$scope.selectItem = function (checkStatus, reportId){
			if(checkStatus){
				$scope.deleteList.push(reportId);
			} else {
				$scope.deleteList.forEach(function(id,index){
					if(id === reportId) {
						$scope.deleteList.splice(index, 1);
					}
				});
			}
			$scope.checkedReportIds = $scope.deleteList;
			// console.log($scope.deleteList)
		};

		//打印预览
		$scope.showPrintReport = function (id) {
			// $state.go('tarsier.monitoring.printReport',{
			// 	reportId: id,
			// 	onDutyDuration: $scope.ondutyDuration
			// });
			var url = $state.href('tarsier.monitoring.printReport',{reportId:id,onDutyDuration:$scope.ondutyDuration});
 		 	window.open(url, '_blank');
		};

		//跳转值班签到/退
		$scope.toOnDutyPage = function () {
			$state.go('tarsier.monitoring.onDutyInspection',{});
		};

		$scope.goToTop = function () {
			document.getElementById('reportCon').scrollTo(0,0);
		};

	}]);


})(nameSpace.reg('graph'));
