(function(graph){

	'use strict';
	//右侧浮动层
	graph.app.directive('diagramCombo', function() {
		return {
			restrict : 'E',
			replace : true,
			templateUrl: 'app/directive/diagramCombo/diagramCombo.html',
			controller: ['$scope', '$timeout', function($scope, $timeout){
				
				$scope.L = L;
				$scope.drop = function(ev){
					ev.preventDefault();
					$scope.diagramArr = [];
					var wrap;
					if($(ev.target).hasClass('bg')){
						wrap = $(ev.target);
					}else{
						wrap = $(ev.target).parents('.bg');
					}

					var imgName = $($scope.currentImg).attr('name');
					var imgId = $($scope.currentImg).attr('id');

					wrap.find('.img').remove();
					wrap.find('.name').remove();

					if(!$scope.imgMove){
						var imgSrc = $($scope.currentImg).attr('src');
						var img = $('<div class="img" id="'+imgId+'" src="'+imgSrc+'" name="'+imgName+'" draggable="true" ondragstart="angular.element(this).scope().drag(event)">');
						img.css({'background':'url('+imgSrc+') center center / contain no-repeat'})
						// img.addClass('skew');
						var name = $('<span class="name">'+imgName+'</span>');
						wrap.append(img);
						wrap.append(name);
					}else{
						$($scope.currentImg).parents('.bg').find('.action').hide();
						var name = $($scope.currentImg).parents('.bg').find('.name');
						wrap.append($scope.currentImg);
						wrap.append(name);
						wrap.find('.action').show();
					}

					//保存视图的序号，改变布局时插入到相应位置
					$('.column-item').each(function(){
						if($(this).find('.img').length){
							var imgJson = {
								num: parseInt($(this).find('.num').html()),
								skew: $(this).find('.img').hasClass('skew') ? 1 : 0,
								imgSrc: $(this).find('.img').attr('src'),
								name: $(this).find('.img').attr('name'),
								id: $(this).find('.img').attr('id'),
							};
							$scope.diagramArr.push(imgJson);
						}
					});

				};

				$scope.allowDrop = function(ev){
					ev.preventDefault();
				};

				$scope.drag = function(ev){
					$scope.currentImg = ev.target;
					if($(ev.target).parents('.column-item').length){
						$scope.imgMove = true;
					}else{
						$scope.imgMove = false;
					}
				};

				$scope.createDiv = function(){
					$('.create-wrap').html('');
					//生成行
					for(var i=0;i<$scope.row;i++){
						var oRow = $('<div class="row-item"></div>');
						$('.create-wrap').append(oRow);
						//生成列
						for(var j=0;j<$scope.column;j++){
							var oColumn = $('<div class="column-item" ondrop="angular.element(this).scope().drop(event)" ondragover="angular.element(this).scope().allowDrop(event)"></div>');
							oColumn.css('width', 100 / $scope.column + '%');
							var oBg = $('<div class="bg"></div>');
							oColumn.append(oBg);
							oRow.append(oColumn);
							oColumn.height(parseInt(oColumn[0].offsetWidth * 0.67));
						}
					}
					//设置数字、删除和旋转
					for(var i=0;i<$('.column-item').length;i++){
						$('.column-item').eq(i).find('.bg').append($('<span class="num">'+(i+1)+'</span>'));
						$('.column-item').eq(i).find('.bg').append($('<div class="action">'+
																		'<button class="btn btn-danger btn-xs" remove-btn title="{{L.get("COMMON_DELETE")}}"><i class="fa fa-times"></i></button>'+
																		'<button class="btn btn-primary btn-xs" skew-btn title="{{L.get("EMV_3D_HORIZONTAL_VERTICAL_SETTING")}}"><i class="fa fa-repeat"></i></button>'+
																	'</div>'));
					}
					//改变布局时，插入图片到相应位置
					for(var i=0;i<$scope.diagramArr.length;i++){
						var img = $('<div class="img" id="'+$scope.diagramArr[i].id+'" src="'+$scope.diagramArr[i].imgSrc+'" name="'+$scope.diagramArr[i].name+'" draggable="true" ondragstart="angular.element(this).scope().drag(event)">');
						var name = $('<span class="name">'+$scope.diagramArr[i].name+'</span>');
						if($scope.diagramArr[i].skew){
							img.addClass('skew');
						}
						img.css({'background':'url('+$scope.diagramArr[i].imgSrc+') center center / contain no-repeat'})
						$('.column-item').eq($scope.diagramArr[i].num - 1).find('.bg').append(img);
						$('.column-item').eq($scope.diagramArr[i].num - 1).find('.bg').append(name);
					}
				};

				//解决方块初次加载高度的bug
				$timeout(function(){
					$scope.createDiv();
				}, 1);

				//监听数据更新
				$scope.$on('update', function(){
					$('.range-row').find('.range-circle').css('left', ($scope.row - 1) * 36);
					$('.range-column').find('.range-circle').css('left', ($scope.column - 1) * 36);
					$('.range-row').find('.range-list').children().css('opacity', 0);
					$('.range-row').find('.range-list').children().eq(0).css('opacity', 1);
					$('.range-row').find('.range-list').children().eq(-1).css('opacity', 1);
					$('.range-row').find('.range-list').children().eq($scope.row - 1).css('opacity', 1);
					$('.range-column').find('.range-list').children().css('opacity', 0);
					$('.range-column').find('.range-list').children().eq(0).css('opacity', 1);
					$('.range-column').find('.range-list').children().eq(-1).css('opacity', 1);
					$('.range-column').find('.range-list').children().eq($scope.column - 1).css('opacity', 1);

					$scope.createDiv();
				});
			}],
			link: function(scope,element,attr){
				var count = 0;
				scope.row = 3;
				scope.column = 3;
				scope.diagramArr = [];

				$('.range-row').find('.range-circle').css('left', (scope.row - 1) * 36);
				$('.range-column').find('.range-circle').css('left', (scope.column - 1) * 36);
				$('.range-row').find('.range-list').children().eq(scope.row - 1).css('opacity', 1);
				$('.range-column').find('.range-list').children().eq(scope.column - 1).css('opacity', 1);

				$('.range-circle').bind('mousedown', function(e){
					var disX = e.pageX - parseInt($(this).css('left'));
					var rangeWrap = $(this).parents('.range-wrap');
					var rangeList = rangeWrap.find('.range-list');
					var min = parseInt(rangeList.attr('min'));
					var max = parseInt(rangeList.attr('max'));
					var _this = $(this);

					$(document).bind('mousemove', function(e){
						var _disX = e.pageX - disX;

						//设置滑动范围
						if(_disX < 0){
							_disX = 0;
						}
						if(_disX > (rangeWrap.width() - _this.width())){
							_disX = rangeWrap.width() - _this.width();
						}

						//设置滑块位置
						count = Math.round(_disX / 36);
						_this.css('left', count * 36);

						rangeList.children().each(function(){
							if($(this).index() != 0 && $(this).index() != rangeList.children().length - 1){
								$(this).css('opacity', 0);
							}
						});

						rangeList.children().eq(count).css('opacity', 1);

						if(rangeWrap.hasClass('range-row')){
							scope.row = count + 1;
						}else if(rangeWrap.hasClass('range-column')){
							scope.column = count + 1;
						}

						// $scope.$apply();
						scope.createDiv();

						//设置数值
						var percent = _disX/(rangeWrap.width() - _this.width());
						var num = parseInt(max * percent);
						if(num < min){
							num = min;
						}
						if(num > max){
							num = max;
						}
					});

					$(document).bind('mouseup', function(){
						$(document).unbind();
					});

					return false;
				});

				element.delegate('.bg','mouseenter',function(){
					if($(this).find('.img').length){
						$(this).find('.action').show();
					}
				});
				element.delegate('.bg','mouseleave',function(){
					$(this).find('.action').hide();
				});
				element.delegate('[remove-btn]','click',function(){
					$(this).parents('.bg').find('.img').remove();
					$(this).parents('.bg').find('.name').remove();
					$(this).parents('.bg').find('.action').hide();
				});
				element.delegate('[skew-btn]','click',function(){
					$(this).parents('.bg').find('.img').toggleClass('skew');
				});
			}
		};
	});

})(nameSpace.reg('graph'));
